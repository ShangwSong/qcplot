#! /bin/bash
# script to create skyplot or recplot
# usage: qcplot input_file type output_type image_file [image_file1]
#    input_file: name of input azi/ele/sn1/sn2 (extension optional)
#    type: sn1/sn2
#    output_type: skyplot/recplot/all
#    image_file: name of output image file (png), name of skyplot file if output_type is all
#    image_file1: used only if output_type is all, name of recplot file (png)
# *** start of customizable part ***
TMPPATH=/tmp/
TEMPLATEPATH=./
SKY=skyplot.plt
REC=recplot.plt
SKYTEMPLATE=${TEMPLATEPATH}${SKY}
RECTEMPLATE=${TEMPLATEPATH}${REC}
# *** end of customizable part ***
if [ $# -lt 4 ]; then
	echo "usage: qcplot input_file type output_type image_file [image_file1]"
	exit -1
fi
if [ "$3" == "all" -a $# -lt 5 ]; then
	echo "usage: qcplot input_file type output_type image_file [image_file1]"
	exit -1
fi
if [ ! -f $SKYTEMPLATE ]; then
	echo "skyplot template not found: $SKYTEMPLATE"
	exit -2
fi
if [ ! -f $RECTEMPLATE ]; then
	echo "recplot template not found: $RECTEMPLATE"
	exit -3
fi

OF=$RANDOM
OF1=${TMPPATH}${OF}.txt
OF2=${TMPPATH}${OF}.out
SKYPLT=${TMPPATH}sky${OF}.plt
RECPLT=${TMPPATH}rec${OF}.plt
./qcplot.py $1 $2 > $OF1
if [ $? -ne 0 ]; then
	exit -1
fi
sort -k3 -r $OF1 > $OF2 
case "$3" in
	skyplot)
		sed -e s%skyplot.png%$4% -e s%data2.txt%$OF2% $SKYTEMPLATE > $SKYPLT
		gnuplot $SKYPLT
		;;
	recplot)
		sed -e s%reckyplot.png%$4% -e s%data2.txt%$OF2% $RECTEMPLATE > $RECPLT
		gnuplot $RECPLT
		;;
	all)
		sed -e s%skyplot.png%$4% -e s%data2.txt%$OF2% $SKYTEMPLATE > $SKYPLT
		gnuplot $SKYPLT
		sed -e s%recplot.png%$4% -e s%data2.txt%$OF2% $RECTEMPLATE > $RECPLT
		gnuplot $RECPLT
		;;
esac
# clean up
rm -f $SKYPLT $RECPLT $OF1 $OF2
